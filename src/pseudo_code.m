%% State and measurement sizes
pose_size = 3;
motion_size = 3;
lmk_size = 2;

%
num_poses_states = 3;
num_lmks_states = 4;
num_motion_factors = 2;
num_poses_factors = 1;
num_lmk_factores = 8;

torad = pi/180;

% --- Factors ---
factor{1+ 0} = struct(...
    'type' , 'pose',...
    'measurement', [0;0;0],...
    'covariance', 1e-3*eye(3,3),...
    'index', 0);                % alerta potser ha de ser 1

factor{1+ 1} = struct(...
    'type' , 'motion',...
    'measurement', [1.0; 0.0; -5*torad],...
    'covariance', diag([1e-2, 1e-2, (2*torad)^2]),...
    'index', [0,1]);

factor{1+ 2} = struct(...
    'type' , 'motion',...
    'measurement', [1.05; -0.25; -15*torad],...
    'covariance', diag([1e-2, 1e-2, (5*torad)^2]),...
    'index', [1,2]);

factor{1+ 3} = struct(...
    'type' , 'lmk',...
    'measurement', [1.3; 40*torad],...
    'covariance', diag([1e-2, (10*torad)^2]),...
    'index', [0,3]);

factor{1+ 4} = struct(...
    'type' , 'lmk',...
    'measurement', [0.72; 95*torad],...
    'covariance', diag([1e-2,(5*torad)^2]),...
    'index', [1,3]);

factor{1+ 5} = struct(...
    'type' , 'lmk',...
    'measurement', [1.15; 25*torad],...
    'covariance', diag([1e-2,(10*torad)^2]),...
    'index', [1,4]);

factor{1+ 6} = struct(...
    'type' , 'lmk',...
    'measurement', [1.5; -40*torad],...
    'covariance', diag([1e-2,(15*torad)^2]),...
    'index', [0,5]);

factor{1+ 7} = struct(...
    'type' , 'lmk',...
    'measurement', [0.7; -78*torad],...
    'covariance', diag([1e-2,(10*torad)^2]),...
    'index', [1,5]);

factor{1+ 8} = struct(...
    'type' , 'lmk',...
    'measurement', [2.4; -26*torad],...
    'covariance', diag([2e-2,(7*torad)^2]),...
    'index', [0,6]);

factor{1+ 9} = struct(...
    'type' , 'lmk',...
    'measurement', [1.5; -35*torad],...
    'covariance', diag([3e-2,(10*torad)^2]),...
    'index', [1,6]);

factor{1+ 10} = struct(...
    'type' , 'lmk',...
    'measurement', [0.9; -37*torad],...
    'covariance', diag([2e-2,(10*torad)^2]),...
    'index', [2,6]);

% ---States ---

states{1+ 0} = struct(...
     'type', 'pose',...
     'range', [1;2;3],... % Posicio del estat 0 en el vector estats
     'value', [0;0;0]);
 
states{1+ 1} = struct(...
     'type', 'pose',...
     'range', [4;5;6],... % Posicio del estat 1 en el vector estats
     'value', [0;0;0]);   % S'escriuren el valors dins del bucle
 
states{1+ 2} = struct(...
     'type', 'pose',...
     'range', [7;8;9],... % Posicio del estat 2 en el vector estats
     'value', [0;0;0]);
 
states{1+ 3} = struct(...
     'type', 'lmk',...
     'range', [10;11],... % Posicio del landmark 3 en el vector estats
     'value', [1;0]);

states{1+ 4} = struct(...
     'type', 'lmk',...
     'range', [12;13],... % Posicio del landmark 4 en el vector estats
     'value', [1;0]);
 
states{1+ 5} = struct(...
     'type', 'lmk',...
     'range', [14;15],... % Posicio del landmark 5 en el vector estats
     'value', [1;0]);
 
states{1+ 6} = struct(...
     'type', 'lmk',...
     'range', [16;17],... % Posicio del landmark 6 en el vector estats
     'value', [1;0]);
 
dx = ones(17,1)*1e6;
eps = 1e-6;

while norm(dx) > eps
    
    [A,r] = buildproblem(states,factor);
    dx = solvelinearized(A,r);  
    
    states = updatestates(states,dx);
    
    drawmap(states,factor);
end


